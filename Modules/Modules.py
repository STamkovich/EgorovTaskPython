# 8.1 Установка модулей в Python

# установка модулей
#  в консоле pip - менеджер Python
# Usage:
#   pip <command> [options]
#
# Commands:
#   install                     Установить пакеты.
#   download                    Скачайте пакеты.
#   uninstall                   Удалите пакеты.
#   freeze                      Вывести установленные пакеты в формате требований.
#   list                        Список установленных пакетов
#   show                        Показать информацию об установленных пакетах.
#   check                       Убедитесь, что установленные пакеты имеют совместимые зависимости
#   config                      Управляйте локальной и глобальной конфигурацией.
#   search                      Найдите в PyPI пакеты.
#   wheel                       Создавайте колеса в соответствии с вашими требованиями.
#   hash                        Вычислить хэши архивов пакетов.
#   completion                  Вспомогательная команда, используемая для завершения команды.
#   debug                       Показать информацию, полезную для отладки.
#   help                        Показать справку по командам.
#
# General Options:
#   -h, --help                  Покажи справку.
#   --isolated                  Запустите pip в изолированном режиме, игнорируя
#                               переменные среды и пользовательская конфигурация.
#   -v, --verbose               Дайте больше результатов. Вариант является аддитивным и может быть
#                               использовался до 3 раз.
#   -V, --version               Показать версию и выйти.
#   -q, --quiet                 Дайте меньше выхода. Опция является аддитивной и может использоваться до 3 раз
#                               (в соответствии с уровнями регистрации WARNING, ERROR и CRITICAL).
#   --log <path>                Путь к подробному журналу добавления.
#   --proxy <proxy>             Укажите прокси в форме
#                               [пользователь: пароль @] прокси.сервер: порт.
#   --retries <retries>         Максимальное количество попыток, которое должно предпринять каждое соединение
#                               (по умолчанию 5 раз).
#   --timeout <sec>             Установите тайм-аут сокета (по умолчанию 15 секунд).
#   --exists-action <action>    Действие по умолчанию, если путь уже существует:
#                               (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.
#   --trusted-host <hostname>   Отметьте эту пару хост или хост: порт как надежную,
#                               даже если у него нет действующего или какого-либо HTTPS.
#                               Путь к альтернативному пакету CA.
#   --client-cert <path>        Путь к SSL-сертификату клиента, отдельный файл
#                               содержащий закрытый ключ и сертификат
#                               в формате PEM.
#   --cache-dir <dir>           Сохраните данные кеша в <dir>.
#   --no-cache-dir              Отключите кеш.
#   --disable-pip-version-check Не проверяйте периодически PyPI, чтобы определить
#                               доступна ли новая версия pip для
#                               скачать. Подразумевается --no-index.
#   --no-color                  Подавить цветной вывод
#   --no-python-version-warning Предупреждения о прекращении поддержки тишины для предстоящих
#                               неподдерживаемые питоны.


# 8.2 Импорт стандартных модулей
# модуль это любая программа которуб вы написали либо была написана другими разработчиками
# и эти модули можно импортировать в ваш модуль
#  у модуля есть два главных атрибута это имя и где он распологаепться и второй это его пространство имён
#  (в него поподают все имена вашего модуля которые находятсья в глабальной области видимости

# import pprint - когда импортируешь целиком модуль
# import math as m  - когда даёшь никнайм модуля что бы избежать конвликта имён
# from math import e, pi, factorial - когда импортируешь конретные модули
# from math import - импортирование всех имён модуля


# 8.3 Импорт собственных модулей в Python

import test
from test import my_num1

# создание пакетов в python

