# Вложенные циклы For
for i in range(1, 10):
    for j in range(1, i):
        print(j, end='')
    print()

for i in range(1, 10):
    for j in range(10, 14):
        print(i, j)
# такие циклы часто изпользуют в переборах возможных значениий
# например
# длинна пороля
from string import printable

for b1 in printable:
    for b2 in printable:
        for b3 in printable:
            print(b1, b2, b3)

# printable(переменная) -  0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&'()*+,-./:;<=>?@[\]^_`{|}
# ещё пример - таблица умножений
for j in range(1, 10):
    for i in range(1, 11):
        print(i, "*", j, "=", i * j, end='    ')
    print()

# Сколько шестибуквенных слов, начинается и заканчивается
# согластной буквой и содержащих ровно 2 гласныеб можно составить
# из букв Т, Ы, К, В, А? Каждая из допустимых букв
# может входить в слово несколько раз
k = 0
for b1 in 'tukva':
    for b2 in 'tukva':
        for b3 in 'tukva':
            for b4 in 'tukva':
                for b5 in 'tukva':
                    for b6 in 'tukva':
                        rez = b1 + b2 + b3 + b4 + b5 + b6
                        if rez[0] in 'tkv' and rez[-1] in 'tkv':
                            if rez.count('a') + rez.count('u') == 2:
                                k += 1
print(k)
#
for i in range(1, 21):
    x = i
    s = 0
    while x > 0:
        s += x % 10
        x //= 10
    print(i, s)
# задачки
# Найдите сумму всех четырехзначных чисел, сумма цифр каждого из которых равна
s = 0
for i in range(1, 10):
    for j in range(0, 10):
        for k in range(0, 10):
            for o in range(0, 10):
                if i + j + k + o == 20:
                    s = s + int(str(i) + str(j) + str(k) + str(o))
print(s)
# В этой задаче вам предстоит построить лесенку из чисел. Программа принимает на вход целое положительное число n (
# n<=15) - количество уровней, ваша задача вывести n уровней, в каждом из которых стоят числа от 1 до значения уровня.
n = int(input())
for i in range(n + 1):
    for j in range(1, i + 1):
        print(j, end='')
    print()
# Постулат Бертрана Постулат Бертрана (теорема Бертрана-Чебышева, теорема Чебышева) гласит, что для любого n > 1
# найдется простое число p в интервале n < p < 2n. Такая гипотеза была выдвинута в 1845 году французским математиком
# Джозефем Бертраном (проверившим ее до n=3000000) и доказана в 1850 году Пафнутием Чебышевым. Рамануджан в 1920 году
# нашел более простое доказательство, а Эрдеш в 1932 – еще более простое. Ваша задача состоит в том, чтобы решить
# несколько более общую задачу – а именно по числу n найти количество простых чисел p из интервала n < p < 2n.
# Напомним, что число называется простым, если оно делится только само на себя и на единицу. Входные данные Программа
# принимает на вход целое число n (2 ≤ n ≤ 50000). Выходные данные Вам необходимо вывести на экран одно число –
# количество простых чисел p на интервале  n < p < 2n.
n = int(input())
k = 0
for i in range(n + 1, n * 2):
    d = 0
    for j in range(2, int(i ** 0.5) + 1):
        if i % j == 0:
            d += 1
        if d > 0:
            break
    if d == 0:
        k += 1
print(k)
# Напишите программу для построения горизонтальных столбчатых диаграмм с помощью символа звёздочки.
# Формат ввода
# Несколько натуральных чисел на одной строке.
# Формат вывода
# Несколько чисел на одной строке.
n = list(map(int, input().split()))
for i in n:
    print(i * '*')
# Все просто, вам поступает число n - количество элементов в списке, и затем сам список.
# Ваша задача отсортировать список по возрастанию при помощи пузырьковой сортировки,
# в случае если элементы соседние совпадают менять их ненужно.
# В качестве ответа нужно вывести отсортированный список и какое количество раз пришлось переставлять элементы
# в процессе сортировки
n = int(input())
N = list(map(int, input().split()))
count = 0
for i in range(n - 1):
    for j in range(n-i-1):
        if N[j] > N[j+1]:
            N[j], N[j+1] = N[j+1], N[j]
            count += 1
print(*N)
print(count)