# Cтроки и операции над ними
n = '''hello
world
hey
'''
print(n)
# сложение строк
s = 'hello'
g = 'world'
print(s + g)
# умножение строк
e = s * 3
print(e)
# нахождение длинны строки
t = len('hello')
print(t)
q = input()
print("Вы ввели", len(q), 'символов')
# проверка есть ли символ в строке
i = "!2#$%%^567"
print('6' in i)
# сравнение строк
w = 'aaa' == 'aaa'
print(w)
w1 = "aaa" > 'er'
print(w1)
# получение числового значения
r = ord('a')  # ascii code table узнать код значения
print(r)
# задачки
a = 'Я стану крутым программистом!'
print(a, a, a, sep='\n')

print(input() + "\n" + input())

a = input()
b = input()
c = input()
print(c, b, a, sep="\n")

print((input() + ' ') * 4)

print("Лев Николаевич Толстой написал \"Война и мир\"")

                                        # Cтроки и операции над ними
# полуения индекса в значении
a = "Hello World"
print([4])

a = "Hello World"
print(a[1:6])
# Программа получает на вход одно слово. Ваша задача перенести последнюю букву в начало,
# тем самым сдвинуть все остальные буквы вправо на один разряд. В качестве ответа нужно вывести полученное слово
a = input()
b = a[-1]+a[:-1]
print(b)

                                                # Методы строк
# Метод upper() - этот метод превращает все буквы строки в заглавные
# lower() - противоположный метод
# 1)
print('hello'.upper())
# 2)
s = "hello"
s = s.upper()
print(s)
print('HELLO'.lower())
# Метод count() - c помощю этого метода пожно подсчитать сколько раз подстрока  встретилась в вашей строке
s = "hello world"
s = s.count('o')
print(s)
# поиск с двум аргументами
s = "hello world"
s = s.count('o', 6)
print(s)
# поиск с тремя аргументами
s = "hello world"
s = s.count('l', 1, 4)
print(s)
# метод find() - ищет индекс подстроки
# метод rfind() - ищет с обратной стороны
s = "hello world"
s = s.find('e')
print(s)
# index() - возвращает индех подстроки
# метод replace(замена)
s = "hello world"
s = s.replace('e', '')  # третий арумент указывает количество замен выхотите сделать
print(s)
# метод isalpha - состоит ли строка целиком из букв true&false
# isdigit - состоит ли строка целиком из символов, цифр true&false
# метод rjust() - пинимет тольео ширину - этот метод дополняет нашу строку до указанной длинны
s.rjust(10, '-')
# метод split() - метод разделяет строку по пробелам(по умолчаню) и формирует список
w = 'ivanov ivan ivanovich'
w = w.split()
print(w)
t = '43,543,233,12,334,2323,323'.split()
print(t)
# метод join() обьеденяет
t = ['43,543,233,12,334,2323,323']
t = '='.join(t)
print(t)
# метод strip() без арументов - этот метод удаляет знаки пробело и переносов на новую строку
# задачки
# Петя записался в кружок по программированию. На первом занятии Пете задали написать простую программу.
# Программа должна делать следующее: в заданной строке, которая состоит из прописных и строчных латинских букв, она:
# удаляет все гласные буквы,
# перед каждой согласной буквой ставит символ ".",
# все прописные согласные буквы заменяет на строчные.
# Гласными буквами считаются буквы "A", "O", "Y", "E", "U", "I", а согласными — все остальные.
# На вход программе подается ровно одна строка, она должна вернуть результат в виде одной строки,
# получившейся после обработки.
a=input().lower()
b=a.replace('a','').replace('o','').replace('u','').replace('y','').replace('i','').replace('e','')
print(b.replace('','.').rstrip('.'))

x = input().lower()
x = x[0:7:2]+x[7::2]
print('.'+'.'.join(x))
# Форматирование строк Python. Метод format
# Позиционное использование метода format()
name = 'Андрей'
mid_name = 'Михайлович'
balance = 107

text = '''Дорогой {0} {1}, баланс вашего лицевого счёта состовляет {2} руб.'''.format(name, mid_name, balance)
print(text)
# именовонное использование переменных
name = 'Андрей'
mid_name = 'Михайлович'
balance = 107

text = '''Дорогой {n} {m}, баланс вашего лицевого счёта состовляет {d} руб.'''.format(n=name, m=mid_name, d=balance)
print(text)
